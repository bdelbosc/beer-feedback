{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../Datepicker.svelte",
    "../../Month.svelte",
    "../../NavBar.svelte",
    "../../Popover.svelte",
    "../../Week.svelte",
    "../../App.svelte",
    "../../Aroma.svelte",
    "../../Beer.svelte",
    "../../Flavor.svelte",
    "../../Overall.svelte",
    "../../User.svelte",
    "../../Guideline.svelte",
    "../../Level.svelte",
    "../../Octocat.svelte",
    "../../Score.svelte",
    "../../Srm.svelte",
    "../../SunburstPicker.svelte",
    "../../SvgIcon.svelte",
    "../../Tabs.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import Month from './Month.svelte';\n  import NavBar from './NavBar.svelte';\n  import Popover from './Popover.svelte';\n  import { getMonths } from './lib/helpers';\n  import { formatDate, internationalize } from 'timeUtils';\n  import { keyCodes, keyCodesArray } from './lib/keyCodes';\n  import { onMount, createEventDispatcher } from 'svelte';\n\n  const dispatch = createEventDispatcher();\n  const today = new Date();\n  const oneYear = 1000 * 60 * 60 * 24 * 365;\n\n  let popover;\n\n  export let format = '#{m}/#{d}/#{Y}';\n  export let start = new Date(Date.now() - oneYear);\n  export let end = new Date(Date.now() + oneYear);\n  export let selected = today;\n  export let dateChosen = false;\n  export let trigger = null;\n  export let selectableCallback = null;\n  export let weekStart = 0;\n  export let daysOfWeek = [\n    ['Sunday', 'Sun'],\n    ['Monday', 'Mon'],\n    ['Tuesday', 'Tue'],\n    ['Wednesday', 'Wed'],\n    ['Thursday', 'Thu'],\n    ['Friday', 'Fri'],\n    ['Saturday', 'Sat']\n  ];\n  export let monthsOfYear = [\n    ['January', 'Jan'],\n    ['February', 'Feb'],\n    ['March', 'Mar'],\n    ['April', 'Apr'],\n    ['May', 'May'],\n    ['June', 'Jun'],\n    ['July', 'Jul'],\n    ['August', 'Aug'],\n    ['September', 'Sep'],\n    ['October', 'Oct'],\n    ['November', 'Nov'],\n    ['December', 'Dec']\n  ];\n\n  selected = (\n    selected.getTime() < start.getTime()\n    || selected.getTime() > end.getTime()\n  ) ? start : selected;\n\n  export let style = '';\n\n  // theming variables:\n  export let buttonBackgroundColor = '#fff';\n  export let buttonBorderColor = '#eee';\n  export let buttonTextColor = '#333';\n  export let highlightColor = '#f7901e';\n  export let dayBackgroundColor = 'none';\n  export let dayTextColor = '#4a4a4a';\n  export let dayHighlightedBackgroundColor = '#efefef';\n  export let dayHighlightedTextColor = '#4a4a4a';\n\n  internationalize({ daysOfWeek, monthsOfYear });\n  let sortedDaysOfWeek = weekStart === 0 ? daysOfWeek : (() => {\n    let dow = daysOfWeek.slice();\n    dow.push(dow.shift());\n    return dow;\n  })();\n\n  let highlighted = today;\n  let shouldShakeDate = false;\n  let shakeHighlightTimeout;\n  let month = today.getMonth();\n  let year = today.getFullYear();\n\n  let isOpen = false;\n  let isClosing = false;\n\n  today.setHours(0, 0, 0, 0);\n\n  function assignmentHandler(formatted) {\n    if (!trigger) return;\n    trigger.innerHTML = formatted;\n  }\n\n  $: months = getMonths(start, end, selectableCallback, weekStart);\n\n  let monthIndex = 0;\n  $: {\n    monthIndex = 0;\n    for (let i = 0; i < months.length; i += 1) {\n      if (months[i].month === month && months[i].year === year) {\n        monthIndex = i;\n      }\n    }\n  }\n  $: visibleMonth = months[monthIndex];\n\n  $: visibleMonthId = year + month / 100;\n  $: lastVisibleDate = visibleMonth.weeks[visibleMonth.weeks.length - 1].days[6].date;\n  $: firstVisibleDate = visibleMonth.weeks[0].days[0].date;\n  $: canIncrementMonth = monthIndex < months.length - 1;\n  $: canDecrementMonth = monthIndex > 0;\n  $: wrapperStyle = `\n    --button-background-color: ${buttonBackgroundColor};\n    --button-border-color: ${buttonBorderColor};\n    --button-text-color: ${buttonTextColor};\n    --highlight-color: ${highlightColor};\n    --day-background-color: ${dayBackgroundColor};\n    --day-text-color: ${dayTextColor};\n    --day-highlighted-background-color: ${dayHighlightedBackgroundColor};\n    --day-highlighted-text-color: ${dayHighlightedTextColor};\n    ${style}\n  `;\n\n  export let formattedSelected;\n  $: {\n    formattedSelected = typeof format === 'function'\n      ? format(selected)\n      : formatDate(selected, format);\n  }\n\n  onMount(() => {\n    month = selected.getMonth();\n    year = selected.getFullYear();\n  });\n\n  function changeMonth(selectedMonth) {\n    month = selectedMonth;\n    highlighted = new Date(year, month, 1);\n  }\n\n  function incrementMonth(direction, day = 1) {\n    if (direction === 1 && !canIncrementMonth) return;\n    if (direction === -1 && !canDecrementMonth) return;\n    let current = new Date(year, month, 1);\n    current.setMonth(current.getMonth() + direction);\n    month = current.getMonth();\n    year = current.getFullYear();\n    highlighted = new Date(year, month, day);\n  }\n\n  function getDefaultHighlighted() {\n    return new Date(selected);\n  }\n\n  const getDay = (m, d, y) => {\n    let theMonth = months.find(aMonth => aMonth.month === m && aMonth.year === y);\n    if (!theMonth) return null;\n    // eslint-disable-next-line\n    for (let i = 0; i < theMonth.weeks.length; ++i) {\n      // eslint-disable-next-line\n      for (let j = 0; j < theMonth.weeks[i].days.length; ++j) {\n        let aDay = theMonth.weeks[i].days[j];\n        if (aDay.month === m && aDay.day === d && aDay.year === y) return aDay;\n      }\n    }\n    return null;\n  };\n\n  function incrementDayHighlighted(amount) {\n    let proposedDate = new Date(highlighted);\n    proposedDate.setDate(highlighted.getDate() + amount);\n    let correspondingDayObj = getDay(\n      proposedDate.getMonth(),\n      proposedDate.getDate(),\n      proposedDate.getFullYear()\n    );\n    if (!correspondingDayObj || !correspondingDayObj.isInRange) return;\n    highlighted = proposedDate;\n    if (amount > 0 && highlighted > lastVisibleDate) {\n      incrementMonth(1, highlighted.getDate());\n    }\n    if (amount < 0 && highlighted < firstVisibleDate) {\n      incrementMonth(-1, highlighted.getDate());\n    }\n  }\n\n  function checkIfVisibleDateIsSelectable(date) {\n    const proposedDay = getDay(date.getMonth(), date.getDate(), date.getFullYear());\n    return proposedDay && proposedDay.selectable;\n  }\n\n  function shakeDate(date) {\n    clearTimeout(shakeHighlightTimeout);\n    shouldShakeDate = date;\n    shakeHighlightTimeout = setTimeout(() => {\n      shouldShakeDate = false;\n    }, 700);\n  }\n\n  function assignValueToTrigger(formatted) {\n    assignmentHandler(formatted);\n  }\n\n  function registerSelection(chosen) {\n    if (!checkIfVisibleDateIsSelectable(chosen)) return shakeDate(chosen);\n    // eslint-disable-next-line\n    close();\n    selected = chosen;\n    dateChosen = true;\n    assignValueToTrigger(formattedSelected);\n    return dispatch('dateSelected', { date: chosen });\n  }\n\n  function handleKeyPress(evt) {\n    if (keyCodesArray.indexOf(evt.keyCode) === -1) return;\n    evt.preventDefault();\n    switch (evt.keyCode) {\n      case keyCodes.left:\n        incrementDayHighlighted(-1);\n        break;\n      case keyCodes.up:\n        incrementDayHighlighted(-7);\n        break;\n      case keyCodes.right:\n        incrementDayHighlighted(1);\n        break;\n      case keyCodes.down:\n        incrementDayHighlighted(7);\n        break;\n      case keyCodes.pgup:\n        incrementMonth(-1);\n        break;\n      case keyCodes.pgdown:\n        incrementMonth(1);\n        break;\n      case keyCodes.escape:\n        // eslint-disable-next-line\n        close();\n        break;\n      case keyCodes.enter:\n        registerSelection(highlighted);\n        break;\n      default:\n        break;\n    }\n  }\n\n  function registerClose() {\n    document.removeEventListener('keydown', handleKeyPress);\n    dispatch('close');\n  }\n\n  function close() {\n    popover.close();\n    registerClose();\n  }\n\n  function registerOpen() {\n    highlighted = getDefaultHighlighted();\n    month = selected.getMonth();\n    year = selected.getFullYear();\n    document.addEventListener('keydown', handleKeyPress);\n    dispatch('open');\n  }\n</script>\n\n<div\n  class=\"datepicker\"\n  class:open=\"{isOpen}\"\n  class:closing=\"{isClosing}\"\n  style={wrapperStyle}\n>\n  <Popover\n    bind:this=\"{popover}\"\n    bind:open=\"{isOpen}\"\n    bind:shrink=\"{isClosing}\"\n    {trigger}\n    on:opened=\"{registerOpen}\"\n    on:closed=\"{registerClose}\"\n  >\n    <div slot=\"trigger\">\n      <slot {selected} {formattedSelected}>\n        {#if !trigger}\n        <button class=\"calendar-button\" type=\"button\">\n          {formattedSelected}\n        </button>\n        {/if}\n      </slot>\n    </div>\n    <div slot=\"contents\">\n      <div class=\"calendar\">\n        <NavBar\n          {month}\n          {year}\n          {canIncrementMonth}\n          {canDecrementMonth}\n          {start}\n          {end}\n          {monthsOfYear}\n          on:monthSelected={e => changeMonth(e.detail)}\n          on:incrementMonth={e => incrementMonth(e.detail)}\n        />\n        <div class=\"legend\">\n          {#each sortedDaysOfWeek as day}\n          <span>{day[1]}</span>\n          {/each}\n        </div>\n        <Month\n          {visibleMonth}\n          {selected}\n          {highlighted}\n          {shouldShakeDate}\n          id={visibleMonthId}\n          on:dateSelected={e => registerSelection(e.detail)}\n        />\n      </div>\n    </div>\n  </Popover>\n</div>\n\n<style>\n  .datepicker {\n    display: inline-block;\n    margin: 0 auto;\n    text-align: center;\n    overflow: visible;\n  }\n\n  .calendar-button {\n    padding: 10px 20px;\n    border: 1px solid var(--button-border-color);\n    display: block;\n    text-align: center;\n    width: 300px;\n    text-decoration: none;\n    cursor: pointer;\n    background: var(--button-background-color);\n    color: var(--button-text-color);\n    border-radius: 7px;\n    box-shadow: 0px 0px 3px rgba(0, 0, 0, 0.1);\n  }\n\n  *,\n  *:before,\n  *:after {\n    box-sizing: inherit;\n  }\n\n  .calendar {\n    box-sizing: border-box;\n    position: relative;\n    overflow: hidden;\n    user-select: none;\n    width: 100vw;\n    padding: 10px;\n    padding-top: 0;\n  }\n\n  @media (min-width: 480px) {\n    .calendar {\n      height: auto;\n      width: 340px;\n      max-width: 100%;\n    }\n  }\n\n  .legend {\n    color: #4a4a4a;\n    padding: 10px 0;\n    margin-bottom: 5px;\n  }\n\n  .legend span {\n    width: 14.285714%;\n    display: inline-block;\n    text-align: center;\n  }\n</style>\n",
    "<script>\n  import Week from './Week.svelte';\n\n  export let id;\n  export let visibleMonth;\n  export let selected;\n  export let highlighted;\n  export let shouldShakeDate;\n\n  let lastId = id;\n  let direction;\n\n  $: {\n    direction = lastId < id ? 1 : -1;\n    lastId = id;\n  }\n</script>\n\n<div class=\"month-container\">\n  {#each visibleMonth.weeks as week (week.id) }\n    <Week \n      days={week.days} \n      {selected} \n      {highlighted} \n      {shouldShakeDate} \n      {direction}\n      on:dateSelected \n    />\n  {/each}\n</div>\n\n<style>\n  .month-container { \n    width: 100%;\n    display: -ms-grid;\n    display: grid;\n    -ms-grid-columns: 1fr;\n    -ms-grid-rows: 1fr;\n  }\n</style>\n",
    "<script>\n  import { createEventDispatcher } from 'svelte';\n\n  const dispatch = createEventDispatcher();\n\n  export let month;\n  export let year;\n  export let start;\n  export let end;\n  export let canIncrementMonth;\n  export let canDecrementMonth;\n  export let monthsOfYear;\n\n  let monthSelectorOpen = false;\n  let availableMonths;\n\n  $: {\n    let isOnLowerBoundary = start.getFullYear() === year;\n    let isOnUpperBoundary = end.getFullYear() === year;\n    availableMonths = monthsOfYear.map((m, i) => {\n      return Object.assign({}, {\n        name: m[0],\n        abbrev: m[1]\n      }, {\n        selectable:\n          (!isOnLowerBoundary && !isOnUpperBoundary)\n          || (\n            (!isOnLowerBoundary || i >= start.getMonth())\n            && (!isOnUpperBoundary || i <= end.getMonth())\n          )\n      });\n    });\n  }\n\n  function toggleMonthSelectorOpen() {\n    monthSelectorOpen = !monthSelectorOpen;\n  }\n\n  function monthSelected(event, { m, i }) {\n    event.stopPropagation();\n    if (!m.selectable) return;\n    dispatch('monthSelected', i);\n    toggleMonthSelectorOpen();\n  }\n</script>\n\n<div class=\"title\">\n  <div class=\"heading-section\">\n    <div class=\"control\" \n      class:enabled={canDecrementMonth}\n      on:click={() => dispatch('incrementMonth', -1)}>\n      <i class=\"arrow left\"></i>\n    </div>\n    <div class=\"label\" on:click={toggleMonthSelectorOpen}>\n      {monthsOfYear[month][0]} {year}\n    </div> \n    <div class=\"control\"\n      class:enabled={canIncrementMonth}\n      on:click={() => dispatch('incrementMonth', 1)}>\n      <i class=\"arrow right\"></i>\n    </div>\n  </div>\n  <div class=\"month-selector\" class:open={monthSelectorOpen}>\n    {#each availableMonths as monthDefinition, index}\n      <div \n        class=\"month-selector--month\" \n        class:selected={index === month}\n        class:selectable={monthDefinition.selectable}\n        on:click={e => monthSelected(e, { m: monthDefinition, i: index })}\n      >\n        <span>{monthDefinition.abbrev}</span>\n      </div>\n    {/each}\n  </div>\n</div>\n\n<style>\n  .heading-section { \n    font-size: 20px;\n    padding: 24px 15px;\n    display: flex;\n    justify-content: space-between;\n    color: #3d4548;\n    font-weight: bold;\n  }\n  .label { \n    cursor: pointer;\n  }\n  .month-selector { \n    position: absolute;\n    top: 75px; \n    left: 0; \n    right: 0; \n    bottom: 0; \n    background-color: #fff;\n    transition: all 300ms; \n    transform: scale(1.2); \n    opacity: 0; \n    visibility: hidden;\n    z-index: 1;\n    text-align: center;\n  }\n  .month-selector.open { \n    transform: scale(1); \n    visibility: visible;\n    opacity: 1;\n  }\n  .month-selector--month { \n    width: 31.333%; \n    margin: .5%; \n    height: 23%;\n    display: inline-block;\n    color: #4a4a4a;\n    border: 1px solid #efefef;\n    opacity: 0.2;\n  }\n  .month-selector--month.selectable { \n    opacity: 1; \n  }\n  .month-selector--month.selectable:hover { \n    cursor: pointer;\n    box-shadow: 0px 0px 3px rgba(0,0,0,0.15);\n  }\n  .month-selector--month.selected { \n    background: var(--highlight-color);\n    color: #fff;\n  }\n  .month-selector--month:before { \n    content: ' ';\n    display: inline-block;\n    height: 100%;\n    vertical-align: middle;\n  }\n  .month-selector--month span { \n    vertical-align: middle; \n    display: inline-block;\n  }\n\n  .control { \n    padding: 0 8px;\n    opacity: 0.2;\n    transform: translateY(3px);\n  }\n\n  .control.enabled { \n    opacity: 1; \n    cursor: pointer;\n  }\n\n  .arrow {\n    display: inline-block;\n    width: 18px;\n    height: 18px;\n    border-style: solid;\n    border-color: #a9a9a9;\n    border-width: 0;\n    border-bottom-width: 2px;\n    border-right-width: 2px;\n  }\n\n  .arrow.right {\n    transform: rotate(-45deg);\n    -webkit-transform: rotate(-45deg);\n  }\n\n  .arrow.left {\n    transform: rotate(135deg);\n    -webkit-transform: rotate(135deg);\n  }\n\n</style>\n",
    "<script>\n  import { onMount, createEventDispatcher, tick } from 'svelte';\n\n  const dispatch = createEventDispatcher();\n\n  let once = (el, evt, cb) => {\n    function handler() {\n      cb.apply(this, arguments);\n      el.removeEventListener(evt, handler);\n    }\n    el.addEventListener(evt, handler);\n  };\n\n  let popover;\n  let w;\n  let triggerContainer;\n  let contentsAnimated;\n  let contentsWrapper;\n  let translateY = 0;\n  let translateX = 0;\n\n  export let open = false;\n  export let shrink;\n  export let trigger;\n  export const close = () => {\n    shrink = true;\n    once(contentsAnimated, 'animationend', () => {\n      shrink = false;\n      open = false;\n      dispatch('closed');\n    });\n  };\n\n  function checkForFocusLoss(evt) {\n    if (!open) return;\n    let el = evt.target;\n    // eslint-disable-next-line\n    do {\n      if (el === popover) return;\n    // eslint-disable-next-line\n    } while (el = el.parentNode);\n    close();\n  }\n\n  onMount(() => {\n    document.addEventListener('click', checkForFocusLoss);\n    if (!trigger) return;\n    triggerContainer.appendChild(trigger.parentNode.removeChild(trigger));\n\n    // eslint-disable-next-line\n    return () => {\n      document.removeEventListener('click', checkForFocusLoss);\n    };\n  });\n\n  const getDistanceToEdges = async () => {\n    if (!open) { open = true; }\n    await tick();\n    let rect = contentsWrapper.getBoundingClientRect();\n    return {\n      top: rect.top + (-1 * translateY),\n      bottom: window.innerHeight - rect.bottom + translateY,\n      left: rect.left + (-1 * translateX),\n      right: document.body.clientWidth - rect.right + translateX\n    };\n  };\n\n  const getTranslate = async () => {\n    let dist = await getDistanceToEdges();\n    let x; let\n      y;\n    if (w < 480) {\n      y = dist.bottom;\n    } else if (dist.top < 0) {\n      y = Math.abs(dist.top);\n    } else if (dist.bottom < 0) {\n      y = dist.bottom;\n    } else {\n      y = 0;\n    }\n    if (dist.left < 0) {\n      x = Math.abs(dist.left);\n    } else if (dist.right < 0) {\n      x = dist.right;\n    } else {\n      x = 0;\n    }\n    return { x, y };\n  };\n\n  const doOpen = async () => {\n    const { x, y } = await getTranslate();\n\n    translateX = x;\n    translateY = y;\n    open = true;\n\n    dispatch('opened');\n  };\n</script>\n\n<svelte:window bind:innerWidth={w} />\n<div class=\"sc-popover\" bind:this={popover}>\n  <div class=\"trigger\" on:click={doOpen} bind:this={triggerContainer}>\n    <slot name=\"trigger\">\n    </slot>\n  </div>\n  <div \n    class=\"contents-wrapper\" \n    class:visible={open}\n    class:shrink={shrink}\n    style=\"transform: translate(-50%,-50%) translate({translateX}px, {translateY}px)\" \n    bind:this={contentsWrapper}>\n    <div class=\"contents\" bind:this={contentsAnimated}>\n      <div class=\"contents-inner\">\n        <slot name=\"contents\"></slot>\n      </div>\n    </div>\n  </div>\n</div>\n\n<style>\n  .sc-popover { \n    position: relative;\n  }\n\n  .contents-wrapper { \n    transform: translate(-50%, -50%); \n    position: absolute;\n    top: 50%; \n    left: 50%; \n    transition: none;\n    z-index: 2;\n    display: none;\n  }\n\n  .contents { \n    background: #fff;\n    box-shadow: 0px 10px 26px rgba(0,0,0,0.4) ;\n    opacity: .8; \n    padding-top: 0;\n    display: none;\n    animation: grow 200ms forwards cubic-bezier(.92,.09,.18,1.05);\n  }\n\n  .contents-inner { \n    animation: fadeIn 400ms forwards;\n  }\n\n  .contents-wrapper.visible { \n    display: block;\n  }\n\n  .contents-wrapper.visible .contents { \n    opacity: 1; \n    transform: scale(1);\n    display: block;\n  }\n\n  .contents-wrapper.shrink .contents { \n    animation: shrink 150ms forwards cubic-bezier(.92,.09,.18,1.05);\n  }\n\n  @keyframes grow { \n    0% { \n      transform: scale(.9,.1); \n      opacity: 0; \n    }\n    30% { \n      opacity: 1; \n    }\n    100% { \n      transform: scale(1);\n    }\n  }\n\n  @keyframes shrink { \n    0% { \n      transform: scale(1); \n      opacity: 1; \n    }\n    70% { \n      opacity: 1; \n    }\n    100% { \n      opacity: 0; \n      transform: scale(.9,.1);\n    }\n  }\n\n  @keyframes fadeIn { \n    0% { \n      opacity: 0; \n    }\n    50% { \n      opacity: 0;\n    }\n    100% { \n      opacity: 1; \n    }\n  }\n</style>\n",
    "<script>\n  import { areDatesEquivalent } from './lib/helpers';\n  import { fly, fade } from 'svelte/transition';\n  import { createEventDispatcher } from 'svelte';\n\n  const dispatch = createEventDispatcher();\n\n  export let days;\n  export let selected;\n  export let highlighted;\n  export let shouldShakeDate;\n  export let direction;\n</script>\n\n<div \n  class=\"week\" \n  in:fly|local={{ x: direction * 50, duration: 180, delay: 90 }}\n  out:fade|local={{ duration: 180 }}\n>\n  {#each days as day}\n    <div \n      class=\"day\" \n      class:outside-month={!day.partOfMonth}\n      class:is-today={day.isToday}\n      class:is-disabled={!day.selectable}\n    >\n      <button \n        class=\"day--label\" \n        class:selected={areDatesEquivalent(day.date, selected)}\n        class:highlighted={areDatesEquivalent(day.date, highlighted)}\n        class:shake-date={shouldShakeDate && areDatesEquivalent(day.date, shouldShakeDate)}\n        class:disabled={!day.selectable}\n        type=\"button\"\n        on:click={() => dispatch('dateSelected', day.date)}\n      >\n        {day.date.getDate()}\n      </button>\n    </div>\n  {/each}\n</div>\n\n<style>\n  .week { \n    padding: 0;\n    margin: 0;\n    display: -webkit-box;\n    display: -moz-box;\n    display: -ms-flexbox;\n    display: -webkit-flex;\n    display: flex;\n    flex-flow: row;\n    -webkit-flex-flow: row;\n    justify-content: space-around;\n    -ms-grid-column: 1;\n    grid-column: 1; \n  }\n  .week:nth-child(6n + 1) { \n    -ms-grid-row: 1; \n    grid-row: 1; \n  }\n  .week:nth-child(6n + 2) { \n    -ms-grid-row: 2; \n    grid-row: 2; \n  }\n  .week:nth-child(6n + 3) { \n    -ms-grid-row: 3; \n    grid-row: 3; \n  }\n  .week:nth-child(6n + 4) { \n    -ms-grid-row: 4; \n    grid-row: 4; \n  }\n  .week:nth-child(6n + 5) { \n    -ms-grid-row: 5; \n    grid-row: 5; \n  }\n  .week:nth-child(6n + 6) { \n    -ms-grid-row: 6; \n    grid-row: 6; \n  }\n  .day { \n    margin: 2px;\n    color: var(--day-text-color);\n    font-weight: bold;\n    text-align: center;\n    font-size: 16px;\n    flex: 1 0 auto;\n    height: auto;\n    display: flex; \n    flex-basis: 0;\n  }\n  .day.outside-month, \n  .day.is-disabled { \n    opacity: 0.35;\n  }\n  .day:before { \n    content: '';\n    float: left;\n    padding-top: 100%;\n  }\n  .day--label { \n    color: var(--day-text-color);\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    width: 100%;\n    position: relative;\n    border: 1px solid #fff;\n    border-radius: 50%; \n    margin: 10%;\n    padding: 0;\n    align-items: center;\n    background: var(--day-background-color);\n    cursor: pointer;\n    transition: all 100ms linear;\n    font-weight: normal;\n  }\n  .day--label.disabled { \n    cursor: default;\n  }\n  @media (min-width: 480px) { \n    .day--label.highlighted,\n    .day--label:not(.disabled):hover { \n      background: var(--day-highlighted-background-color);\n      border-color: var(--day-highlighted-background-color);\n      color: var(--day-highlighted-text-color);\n    }\n  }\n  .day--label.shake-date { \n    animation: shake 0.4s 1 linear;\n  }\n  .day--label.selected:hover,\n  .day--label.selected,\n  .day--label:active:not(.disabled) { \n    background-color: var(--highlight-color);\n    border-color: var(--highlight-color);\n    color: #fff;\n  }\n  .day.is-today .day--label, \n  .day.is-today .day--label:hover { \n    opacity: 1; \n    background: none;\n    border-color: var(--highlight-color);\n    color: #000;\n  }\n\n  @keyframes shake {\n    0% { transform: translate(7px); }\n    20% { transform: translate(-7px); }\n    40% { transform: translate(3px); }\n    60% { transform: translate(-3px); }\n    80% { transform: translate(1px); }\n    100% { transform: translate(0px); }\n  }\n</style>\n",
    "<svelte:head>\n  <!--  <script src=\"/hnl.mobileConsole.1.3.js\"></script>-->\n</svelte:head>\n<script>\n  import {onMount} from \"svelte\";\n  import Tabs from \"./comp/Tabs.svelte\";\n  import User from './User.svelte';\n  import Beer from './Beer.svelte';\n  import Aroma from './Aroma.svelte';\n  import Appearance from './Appearance.svelte';\n  import Flavor from './Flavor.svelte';\n  import Mouthfeel from './Mouthfeel.svelte';\n  import Overall from './Overall.svelte';\n  import SvgIcon from \"./comp/SvgIcon.svelte\";\n  import {beerIcon, downloadIcon, nextIcon, userIcon} from './js/AppIcons'\n\n  import {AromaDto} from './js/Aroma';\n  import {AppearanceDto} from './js/Appearance';\n  import {FlavorDto} from './js/Flavor';\n  import {MouthfeelDto} from './js/Mouthfeel';\n  import {OverallDto} from './js/Overall';\n  import {UserDto} from './js/User';\n  import {BeerDto} from './js/Beer';\n  import pkg from '../package.json'\n  import Octocat from \"./comp/Octocat.svelte\";\n  import {fade} from 'svelte/transition';\n  import Guideline from \"./comp/Guideline.svelte\";\n  import {generatePdf} from \"./js/PdfGenerator\";\n\n  let visible = false;\n\n  export const name = \"Beer feedback\";\n\n  const user = new UserDto();\n  const beer = new BeerDto();\n  const aroma = new AromaDto();\n  const appearance = new AppearanceDto();\n  const flavor = new FlavorDto();\n  const mouthfeel = new MouthfeelDto();\n  const overall = new OverallDto();\n\n  let mainComment;\n  let totalScore;\n  let start;\n  let mytime;\n  let elapsed = 0;\n  let showPdf = false;\n\n  function getComment(item, header = 'Comment on: ') {\n    if (item.isCompleted()) {\n      return '';\n    }\n    let required = item.getRequired();\n    if (required.length == 1) return header + required + \".\";\n    if (required.length == 2) return header + required[0] + \" and \" + required[1] + \".\";\n    let last = required[required.length - 1];\n    return header + required.join(', ').replace(last, 'and ' + last) + '.';\n  }\n\n  function computeScore() {\n    let score = 0;\n    if (aroma.score > 0) score += aroma.score;\n    if (appearance.score > 0) score += appearance.score;\n    if (flavor.score > 0) score += flavor.score;\n    if (mouthfeel.score > 0) score += mouthfeel.score;\n    if (overall.score > 0) score += overall.score;\n    return score;\n  }\n\n  const interval = setInterval(() => {\n    mytime = new Date();\n    elapsed = Math.round((mytime - start) / 1000);\n    let updated = false;\n    if (user.isUpdated()) {\n      user = user;\n      mainComment = getComment(user, 'Missing: ');\n      user.save();\n    }\n    if (beer.isUpdated()) {\n      beer = beer;\n      mainComment = getComment(beer, 'Missing: ');\n      start = new Date();\n      beer.save();\n    }\n    if (start == undefined && beer.isCompleted()) start = new Date();\n    if (aroma.isUpdated()) {\n      tabItems[0].comment = getComment(aroma);\n      updated = true;\n      aroma.save();\n    }\n    if (appearance.isUpdated()) {\n      tabItems[1].comment = getComment(appearance);\n      updated = true;\n      appearance.save();\n    }\n    if (flavor.isUpdated()) {\n      tabItems[2].comment = getComment(flavor);\n      updated = true;\n      flavor.save();\n    }\n    if (mouthfeel.isUpdated()) {\n      tabItems[3].comment = getComment(mouthfeel);\n      updated = true;\n      mouthfeel.save();\n    }\n    if (overall.isUpdated()) {\n      tabItems[4].comment = getComment(overall);\n      updated = true;\n      overall.save();\n    }\n    if (updated) {\n      tabItems = tabItems;\n      totalScore = computeScore();\n      let completed = true;\n      completed = completed && user.isCompleted();\n      completed = completed && beer.isCompleted();\n      completed = completed && aroma.isCompleted();\n      completed = completed && appearance.isCompleted();\n      completed = completed && flavor.isCompleted();\n      completed = completed && mouthfeel.isCompleted();\n      completed = completed && overall.isCompleted();\n      if (completed) {\n        console.debug(\"SHOW PDF\");\n        showPdf = true;\n      } else {\n        showPdf = false;\n      }\n    }\n    // console.debug(appearance);\n  }, 1500);\n\n\n  let tabItems = [\n    {label: \"Aroma\", shortLabel: \"A\", value: 1, comment: ''},\n    {label: \"Appearance\", shortLabel: \"A\", value: 2, comment: ''},\n    {label: \"Flavor\", shortLabel: \"F\", value: 3, comment: ''},\n    {label: \"Mouthfeel\", shortLabel: \"M\", value: 4, comment: ''},\n    {label: \"Overall\", shortLabel: \"O\", value: 5, comment: ''}\n  ];\n  let currentTab = 1;\n\n  function submit() {\n    let json = {\n      'user': user,\n      'beer': beer,\n      'aroma': aroma,\n      'appearance': appearance,\n      'flavor': flavor,\n      'mouthfeel': mouthfeel,\n      'overall': overall,\n      'score': totalScore,\n      'version': pkg.version,\n    };\n    generatePdf(json);\n  }\n\n  function beerEdit() {\n    document.getElementById(\"evaluation\").hidden = true;\n    document.getElementById(\"user\").hidden = true;\n    document.getElementById(\"beer\").hidden = false;\n    document.getElementById(\"top\").hidden = true;\n  }\n\n  function userEdit() {\n    document.getElementById(\"evaluation\").hidden = true;\n    document.getElementById(\"user\").hidden = false;\n    document.getElementById(\"beer\").hidden = true;\n    document.getElementById(\"top\").hidden = true;\n  }\n\n  function evaluationEdit() {\n    aroma = aroma;\n    currentTab = 1;\n    document.getElementById(\"evaluation\").hidden = false;\n    document.getElementById(\"user\").hidden = true;\n    document.getElementById(\"beer\").hidden = true;\n    document.getElementById(\"top\").hidden = false;\n  }\n\n  onMount(() => {\n    if (!user.isCompleted()) userEdit();\n    else if (!beer.isCompleted() || beer.isFromSharedBeerEntry() || beer.isSelectedTab()) beerEdit();\n    else evaluationEdit();\n    if (!beer.isFromSharedBeerEntry()) {\n      window.onbeforeunload = function () {\n        return \"\";\n      }\n    }\n  });\n</script>\n\n\n<style>\n  /* ----------------------------------------\n  ** Global App css\n  **/\n  :global(span.label) {\n    vertical-align: middle;\n    display: inline-block;\n    width: 100px;\n    color: #555;\n  }\n\n  :global(span.longLabel) {\n    vertical-align: middle;\n    display: inline-block;\n    color: #555;\n    width: 100%;\n  }\n\n  :global(textarea) {\n      width: 100%;\n      height: 150px;\n  }\n\n  :global(select.fixedInput) {\n      width: 250px;\n  }\n\n  :global(input.fixedInput) {\n      width: 250px;\n  }\n\n  :global(button.delete) {\n    float: right;\n    clear: both;\n  }\n\n  :global(button.delete:hover) {\n    background-color: #f44336;\n    color: white;\n  }\n\n  :global(button.validation) {\n    float: right;\n    clear: both;\n    margin: 1em 0 1em 0;\n  }\n\n  :global(div.inputRow) {\n    display: flex;\n    flex-direction: row;\n  }\n\n  :global(p.help) {\n    font-size: 1em;\n    color: #666;\n    font-style: italic;\n    margin: 0.4em 0 0.4em 0;\n  }\n\n  :global(span.buttonText) {\n    font-size: 1em;\n    color: #666;\n    font-style: italic;\n    margin: 0.4em 0 0.4em 0;\n  }\n\n  :global(.required:after) {\n      content:\" *\";\n      color: #933;\n  }\n\n  /* ----------------------------------------\n  ** Local\n  **/\n  div.main {\n    max-width: 640px;\n    margin: auto;\n    clear: both;\n  }\n\n  div.top {\n    max-width: 640px;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 6px;\n    margin-top: 0;\n    clear: both;\n  }\n\n  :global(div.break) {\n      clear: both;\n  }\n\n  .pdf {\n    border: 1px solid #ccc;\n    color: #444;\n    float: right;\n    margin: 0 0 0 0;\n    opacity: 0.5;\n    clear: both;\n  }\n\n  .showPdf {\n    border: 1px solid #ccc;\n    color: #444;\n    float: right;\n    margin: 0 0 0 0;\n    opacity: 1;\n    clear: both;\n  }\n\n  button.settings {\n    color: #444;\n    border: 1px solid #ccc;\n    margin-bottom: 0;\n  }\n\n  .settings > span {\n    font-size: 0.9em;\n  }\n\n  body {\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\n    overscroll-behavior-y: contain !important;\n  }\n\n  button[disabled] {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n\n  button {\n    border: 1px solid #444;\n    background-color: #eee;\n    color: #444;\n  }\n\n  div.footLine {\n      float: right;\n      border-top: 1px solid #dee2e6;\n      width: 100%;\n      font-size: 0.6em;\n      color: #999;\n      clear: both;\n  }\n\n  div.statusLine {\n    float: right;\n    font-size: 0.8em;\n    color: #666;\n    font-style: italic;\n    margin-bottom: 5px;\n  }\n\n  div.help {\n      color: #999;\n      padding-top: 0em;\n      clear: both;\n  }\n\n  /* ----------------------------------------\n  ** Small device override\n  **/\n  @media only screen and (max-width: 639px) {\n      :global(textarea) {\n          height: 100px;\n      }\n\n      :global(select.fixedInput) {\n          width: 170px;\n      }\n\n      :global(input.fixedInput) {\n          width: 170px;\n      }\n\n      div.main {\n          max-width: 320px;\n      }\n\n      div.top {\n          max-width: 320px;\n      }\n\n  }\n\n</style>\n\n<div class=\"top\" id=\"top\">\n  <button class=\"settings\" on:click={() => userEdit()}>\n    <div title=\"User\">\n      <SvgIcon d={userIcon} fill=\"blue\" boxSize=\"20\"/>{user.name}\n    </div>\n  </button>\n  <button class=\"settings\" on:click={() => beerEdit()}>\n    <div title=\"Beer Entry\">\n      <SvgIcon d={beerIcon} boxSize=\"512\" fill=\"#700000\"/>\n      #{beer.entry}\n    </div>\n  </button>\n  <button on:click={() => submit()} class=\"pdf\" class:showPdf={showPdf}>\n    <div title=\"Generate PDF Scoresheet\">\n      <SvgIcon d={downloadIcon} fill=\"transparent\"/>\n      PDF\n    </div>\n  </button>\n</div>\n\n<div class=\"main\">\n  <div id=\"user\">\n    <User user={user}/>\n    <button class=\"validation\" on:click={() => beerEdit()} disabled={!user.isCompleted()}>\n      <span title=\"Beer\"><SvgIcon d={nextIcon} size=\"2em\" fill=\"green\"/><br>Beer</span>\n    </button>\n    <div class=\"help\">\n      <p>Fill in the required fields with a <span class=\"required\">red asterisk</span></p>\n      <p>This web application respects your privacy, all the data entered is stored on your browser,\n         the PDF generation is done from your browser, no data is transferred to any server.</p>\n      <p>Visit <a href=\"https://github.com/bdelbosc/beer-feedback#-beer-feedback\">beer-feedback's GitHub</a> for more information.</p>\n    </div>\n    <Octocat/>\n  </div>\n\n  <div id=\"beer\">\n    <Beer beer={beer} user={user} aroma={aroma} appearance={appearance} flavor={flavor} mouthfeel={mouthfeel} overall={overall} totalScore={totalScore}>\n      <button class=\"validation\" on:click={() => evaluationEdit()} disabled={!beer.isCompleted()}>\n        <span class=\"buttonText\" title=\"Scoresheet\"><SvgIcon d={nextIcon} size=\"2em\" fill=\"green\"/><br/>Go to Scoresheet</span>\n      </button>\n    </Beer>\n    <Octocat/>\n  </div>\n\n  <div id=\"evaluation\">\n    <div class=\"statusLine\">{elapsed}s elapsed, score: {totalScore}</div>\n    <Tabs bind:activeTabValue={currentTab} items={tabItems}/>\n    {#if 1 === currentTab}\n      <div in:fade>\n        <Aroma aroma={aroma}/>\n      </div>\n      <Guideline bind:value={visible} category={beer.category} section=\"aroma\"/>\n    {:else if 2 === currentTab}\n      <div in:fade>\n        <Appearance appearance={appearance}/>\n      </div>\n      <Guideline bind:value={visible} category={beer.category} section=\"appearance\"/>\n    {:else if 3 === currentTab}\n      <div in:fade>\n        <Flavor flavor={flavor}/>\n      </div>\n      <Guideline bind:value={visible} category={beer.category} section=\"flavor\"/>\n    {:else if 4 === currentTab}\n      <div in:fade>\n        <Mouthfeel mouthfeel={mouthfeel}/>\n      </div>\n      <Guideline bind:value={visible} category={beer.category} section=\"mouthfeel\"/>\n    {:else if 5 === currentTab}\n      <div in:fade>\n        <Overall overall={overall} score={totalScore} aroma={aroma} flavor={flavor}/>\n      </div>\n      <Guideline bind:value={visible} category={beer.category} section=\"overall\"/>\n    {/if}\n  </div>\n  <div class=\"footLine\"><a href=\"https://github.com/bdelbosc/beer-feedback#-beer-feedback\" rel=\"noopener\" target=\"_blank\">{pkg.name} v{pkg.version}</a></div>\n</div>\n",
    "<script>\n  import aromaData from './data/aroma-data.json';\n  import aromaLayout from './data/aroma-layout.json';\n  import SunburstPicker from './comp/SunburstPicker.svelte';\n  import Level from './comp/Level.svelte';\n  import AromaProperties from './comp/AromaProperties.svelte';\n  import {onMount} from 'svelte';\n  import SvgIcon from \"./comp/SvgIcon.svelte\";\n  import {\n    hopsIcon,\n    maltIcon,\n    fermentationIcon,\n    moreIcon,\n    trashIcon,\n    addIcon,\n    alertIcon,\n    warmsIcon,\n    initialIcon,\n    editIcon,\n    checkmarkIcon,\n  } from './js/AppIcons'\n  import Score from \"./comp/Score.svelte\";\n\n  export let aroma;\n  let currentAroma = '';\n  let inappropriate = false;\n  let initial = false;\n  let warms = false;\n  let level = 3;\n  let selecting = true;\n  let editEntry = -1;\n\n  onMount(async () => {\n    document.getElementById('picker').hidden = true;\n    document.getElementById('list').hidden = false;\n  });\n\n  function picker() {\n    currentAroma = '';\n    document.getElementById('picker').hidden = false;\n    document.getElementById('list').hidden = true;\n  }\n\n  function edit(index) {\n    currentAroma = 'Aroma/' + aroma.aromas[index].category + \"/\" + aroma.aromas[index].trait;\n    initial = aroma.aromas[index].initial;\n    inappropriate = aroma.aromas[index].inappropriate;\n    warms = aroma.aromas[index].warms;\n    level = aroma.aromas[index].level;\n    editEntry = index;\n    document.getElementById('picker').hidden = false;\n    document.getElementById('list').hidden = true;\n  }\n\n  function add() {\n    document.getElementById('picker').hidden = true;\n    document.getElementById('list').hidden = false;\n    const boom = currentAroma.split('/');\n    const category = boom[1].toLocaleLowerCase();\n    let description = boom[2];\n    for (let i = 3; i < boom.length; i++) {\n      description += \"/\";\n      description += boom[i];\n    }\n    if (editEntry >= 0) {\n      aroma.aromas[editEntry] = {\n        level: level,\n        category: category,\n        trait: description,\n        initial: initial,\n        warms: warms,\n        inappropriate: inappropriate\n      };\n      editEntry = -1;\n    } else {\n      aroma.aromas.push({\n        level: level,\n        category: category,\n        trait: description,\n        initial: initial,\n        warms: warms,\n        inappropriate: inappropriate\n      });\n      aroma = aroma\n    }\n    initial = false;\n    warms = false;\n    inappropriate = false;\n    aroma.updateHandler(true);\n  }\n\n  function clear(index) {\n    aroma.aromas.splice(index, 1);\n    aroma = aroma;\n    aroma.updateHandler();\n  }\n\n  function updateHandler() {\n    aroma.updateHandler();\n  }\n\n  $: selecting = currentAroma.length > 0;\n\n</script>\n<style>\n\n  .buttons, .item {\n    clear: both;\n  }\n</style>\n<div id=\"picker\">\n  <SunburstPicker bind:value={currentAroma} data={aromaData} layout={aromaLayout} plotId=\"aromaPicker\"/>\n  {#if selecting}\n    <div class=\"inputRow\">\n      <label>\n        <input type=\"checkbox\" bind:checked={inappropriate}/>\n        <SvgIcon d={alertIcon} fill=\"orange\"/>\n        Inappropriate\n      </label>\n    </div>\n\n    <div class=\"inputRow\">\n      <label>\n        <input type=\"checkbox\" bind:checked={initial}/>\n        <SvgIcon d={initialIcon}/>\n        Initial aroma\n      </label>\n    </div>\n\n    <div class=\"inputRow\">\n      <label>\n        <input type=\"checkbox\" bind:checked={warms}/>\n        <SvgIcon d={warmsIcon}/>\n        When the beer warms\n      </label>\n    </div>\n\n    <div>\n      Intensity:\n      <Level edit=true bind:value={level}/>\n    </div>\n\n    <button class=\"validation\" on:click={() => add()}>\n      <SvgIcon d={checkmarkIcon} fill=\"green\" size=\"2em\"/>\n    </button>\n  {/if}\n</div>\n\n<div id=\"list\">\n  {#each aroma.aromas as item, i}\n    <div class=\"item\">\n      <button class=\"delete\" on:click={() => clear(i)}><span title=\"Delete\"><SvgIcon d={trashIcon} size=\"0.8em\"/></span>\n      </button>\n      {#if item.category === 'hops'}\n        <span title=\"Hops\"><SvgIcon d={hopsIcon} size=\"1em\" boxSize=510 fill=\"darkolivegreen\"/></span>\n      {:else if item.category === 'malt'}\n        <span title=\"Malt\"><SvgIcon d={maltIcon} size=\"1em\" boxSize=225 fill=\"orange\"/></span>\n      {:else if item.category === 'fermentation'}\n        <span title=\"Fermentation\"><SvgIcon d={fermentationIcon} size=\"1em\" boxSize=225 fill=\"chocolate\"/></span>\n      {:else if item.category === 'flaws'}\n        <span title=\"Flaws\"><SvgIcon d={alertIcon} size=\"1em\" fill=\"OrangeRed\"/></span>\n      {:else}\n        <span title=\"Others\"><SvgIcon d={moreIcon} size=\"1em\" boxSize=32 fill=\"LightBlue\"/></span>\n      {/if}\n      <Level value={item.level}/>\n      <span on:click={() => edit(i)}>{item.trait}</span>\n      <AromaProperties inappropriate={item.inappropriate} initial={item.initial} warms={item.warms}/>\n    </div>\n  {/each}\n  <div class=\"buttons\">\n    <button class=\"validation\" on:click={picker}>\n      <span class=\"buttonText\" title=\"Add new Aroma\">\n        <SvgIcon d={addIcon} size=\"2em\" fill=\"blue\"/><br>\n        Add aromatic\n      </span>\n    </button>\n  </div>\n\n  <div>\n    <span class=\"longLabel\" title=\"Pleasure; Expected/surprising for style; Evolution; Conflict?; Complexity\">Additional Comment</span>\n    <textarea on:change={updateHandler} type=text bind:value={aroma.comment}/>\n  </div>\n\n  <div>\n    <Score on:change={updateHandler} bind:value={aroma.score} max=\"12\" min=\"4\">Score</Score>\n  </div>\n</div>\n",
    "<script>\n  import SelectCheck from \"./comp/SelectCheck.svelte\";\n  import {BeerDto, CATEGORY_OPTIONS} from './js/Beer';\n  import SvgIcon from \"./comp/SvgIcon.svelte\";\n  import {beerIcon, trashIcon} from \"./js/AppIcons\";\n  import {parsePDF} from \"./js/PdfRenderer\";\n  import Tabs from \"./comp/Tabs.svelte\";\n  import {TextRenderer} from \"./js/TextRenderer\";\n  import pkg from \"../package.json\";\n  import {generatePdf} from \"./js/PdfGenerator\";\n  import {UserDto} from \"./js/User\";\n  import {AromaDto} from \"./js/Aroma\";\n  import {AppearanceDto} from \"./js/Appearance\";\n  import {MouthfeelDto} from \"./js/Mouthfeel\";\n  import {OverallDto} from \"./js/Overall\";\n  import {FlavorDto} from \"./js/Flavor\";\n  import Datepicker from 'svelte-calendar';\n\n  export let user;\n  export let beer;\n  export let aroma;\n  export let flavor;\n  export let appearance;\n  export let mouthfeel;\n  export let overall;\n  export let totalScore;\n\n  let tabItems = [\n    {label: \"Entry\", shortLabel: \"Entry\", value: 1, comment: ''},\n    {label: \"Load\", shortLabel: \"Load\", value: 2, comment: ''},\n    {label: \"Share\", shortLabel: \"Share\", value: 3, comment: ''},\n    {label: \"...\", shortLabel: \"...\", value: 4, comment: ''}\n  ];\n  let currentTab = 1;\n\n  function updateHandler() {\n    beer.updateHandler();\n  }\n\n  function onFileLoad(elementId, event) {\n    document.getElementById(elementId).innerText = event.target.result;\n  }\n\n  function resetData(message) {\n    if (confirm(message)) {\n      console.info(\"Resetting Beer and Scoresheet data\");\n      beer.flush();\n      beer = beer;\n      aroma.flush();\n      aroma = aroma;\n      appearance.flush();\n      appearance = appearance;\n      flavor.flush();\n      flavor = flavor;\n      mouthfeel.flush();\n      mouthfeel = mouthfeel;\n      overall.flush();\n      overall = overall;\n      return true;\n    }\n    return false;\n  }\n\n  function uploadData(json) {\n    console.info(\"Loading Beer and Scoresheet from json\");\n    beer.load(json.beer);\n    aroma.load(json.aroma);\n    appearance.load(json.appearance);\n    flavor.load(json.flavor);\n    mouthfeel.load(json.mouthfeel);\n    overall.load(json.overall);\n  }\n\n  function onChooseFile(event) {\n    try {\n      if (typeof window.FileReader !== 'function')\n        throw (\"The file API isn't supported on this browser.\");\n      let input = event.target;\n      if (!input)\n        throw (\"The browser does not properly implement the event object\");\n      if (!input.files)\n        throw (\"This browser does not support the `files` property of the file input.\");\n      if (!input.files[0])\n        return undefined;\n      let file = input.files[0];\n      console.info('Loading file ' + file.name);\n      let fr = new FileReader();\n      fr.onload = function (e) {\n        try {\n          parsePDF(e.target.result, uploadData);\n        } catch (err) {\n          alert(err);\n        }\n      };\n      fr.readAsText(file);\n      currentTab = 1;\n    } catch (err) {\n      alert(err.message);\n    }\n  }\n\n  function shareEntryLink() {\n    let link = \"https://beer-feedback.surge.sh/?\";\n    link += \"beerEntry=\" + encodeURIComponent(beer.entry);\n    link += \"&beerCategory=\" + encodeURIComponent(beer.category);\n    link += \"&beerSpecial=\" + encodeURIComponent(beer.special);\n    link += \"&beerComment=\" + encodeURIComponent(beer.comment);\n    console.info(\"Copying entry link: \" + link);\n    let input = document.getElementById(\"sharedEntryLink\");\n    input.value = link;\n    input.select();\n    input.setSelectionRange(0, 99999);\n    document.execCommand(\"copy\");\n  }\n\n  function shareScoresheetLink() {\n    let link = \"https://beer-feedback.surge.sh/?\"\n    let json = JSON.stringify({\n      'user': user,\n      'beer': beer,\n      'aroma': aroma,\n      'appearance': appearance,\n      'flavor': flavor,\n      'mouthfeel': mouthfeel,\n      'overall': overall,\n      'score': totalScore,\n      'version': pkg.version\n    });\n    link += \"renderPdf=\" + encodeURIComponent(json);\n    console.info(\"Copying score link: \" + link);\n    let input = document.getElementById(\"sharedScoresheetLink\");\n    input.value = link;\n    input.select();\n    input.setSelectionRange(0, 99999);\n    document.execCommand(\"copy\");\n  }\n\n  function exportText() {\n    console.info(\"Generate Text Scoresheet\");\n    let renderer = new TextRenderer(\"BEER SCORESHEET\", totalScore);\n    renderScoresheet(renderer);\n    let text = renderer.produce();\n    console.info(text);\n    let input = document.getElementById(\"exportText\");\n    input.value = text;\n    input.select();\n    input.setSelectionRange(0, 99999);\n    document.execCommand(\"copy\");\n  }\n\n  function renderScoresheet(renderer) {\n    user.render(renderer);\n    beer.render(renderer);\n    aroma.render(renderer);\n    appearance.render(renderer);\n    flavor.render(renderer);\n    mouthfeel.render(renderer);\n    overall.render(renderer, totalScore);\n  }\n\n  function checkShareLinkAndRedirect(theUser) {\n    console.info(\"Check for shared link\");\n    if (beer.isFromSharedBeerEntry() && theUser.isCompleted()) {\n      if (resetData(\"Make sure you have generated a PDF of your current Scoresheet before starting a new Beer Entry\")) {\n        beer.loadFromShareLink();\n        aroma.save();\n        appearance.save();\n        flavor.save();\n        mouthfeel.save();\n        overall.save();\n      }\n      window.location.href = \"/?tab=beer\";\n    } else if (beer.isFromSharedScoresheet()) {\n      const params = new URLSearchParams(window.location.search);\n      if (params.has(\"renderPdf\")) {\n        let json = JSON.parse(unescape(params.get(\"renderPdf\")));\n        let pdfJson = {};\n        pdfJson.user = new UserDto();\n        pdfJson.beer = new BeerDto();\n        pdfJson.aroma = new AromaDto();\n        pdfJson.appearance = new AppearanceDto();\n        pdfJson.flavor = new FlavorDto();\n        pdfJson.mouthfeel = new MouthfeelDto();\n        pdfJson.overall = new OverallDto();\n\n        pdfJson.user.load(json.user);\n        pdfJson.beer.load(json.beer);\n        pdfJson.aroma.load(json.aroma);\n        pdfJson.appearance.load(json.appearance);\n        pdfJson.flavor.load(json.flavor);\n        pdfJson.mouthfeel.load(json.mouthfeel);\n        pdfJson.overall.load(json.overall);\n        pdfJson.score = json.score;\n        generatePdf(pdfJson).then(() => {\n            alert(\"You have a new Scoresheet in your Download folder!\");\n            window.location.href = \"/\"\n          }\n          , () => alert(\"PDF generation failure\"));\n      }\n    }\n  }\n\n  $: checkShareLinkAndRedirect(user);\n\n</script>\n<style>\n  button.reset {\n    margin: 1em 0 1em 0;\n    clear: both;\n  }\n\n  button.reset:hover {\n    background-color: #f44336;\n    color: white;\n  }\n</style>\n\n<h3>\n  <SvgIcon d={beerIcon} boxSize=\"512\" fill=\"#700000\"/>\n  Which beer deserves feedback?\n</h3>\n\n\n<Tabs bind:activeTabValue={currentTab} items={tabItems}/>\n{#if 1 === currentTab}\n  <div>\n    <SelectCheck bind:value={beer.category} options={CATEGORY_OPTIONS} noCheck=\"true\" required=\"true\">\n      Category\n    </SelectCheck>\n  </div>\n\n  <div>\n    <span class=\"label required\">Entry #</span>\n    <input type=\"text\" class=\"fixedInput\" on:change={updateHandler} bind:value={beer.entry}/>\n  </div>\n\n  <div>\n    <span class=\"label\">Special Ingredients</span>\n    <input type=\"text\" class=\"fixedInput\" on:change={updateHandler} bind:value={beer.special}/>\n  </div>\n\n  <div>\n    <span class=\"label\">Tasting date</span>\n    <Datepicker bind:selected={beer._tastingDate} bind:dateChosen={beer.updated}>\n      <button class=\"fixedInput\">{beer.tastingDate}</button>\n    </Datepicker>\n  </div>\n\n  <div>\n    <span class=\"longLabel\">Comment</span>\n    <textarea on:change={updateHandler} type=\"text\" bind:value={beer.comment}/>\n  </div>\n\n  <div>\n    <slot/>\n    <button class=\"reset\" on:click={() => resetData(\"Clear Current Beer Entry and its Scoresheet?\\nMake sure you have generated a PDF before\")}>\n      <span class=\"buttonText\" title=\"Reset\"><SvgIcon d={trashIcon} size=\"0.8em\"/><br>New Beer Entry</span>\n    </button>\n  </div>\n\n{:else if 2 === currentTab}\n  <div class=\"upload\">\n    <label><p class=\"help\">Load a PDF Scoresheet, note that the current Scoresheet will be lost</p>\n      <input id='upload' type='file' accept=\"application/pdf\" on:change={() => onChooseFile(event)}/>\n    </label>\n  </div>\n\n{:else if 3 === currentTab}\n  <div>\n    <p class=\"help\">Share this <b>Beer Entry</b> with other judges, copying the following link:</p>\n    <input type=\"text\" value=\"...\" id=\"sharedEntryLink\"/>\n    <button disabled={!beer.isCompleted()} on:click={() => shareEntryLink()}>Copy</button>\n\n    <p class=\"help\">Share your <b>Scoresheet</b>, copying the following link:</p>\n    <input type=\"text\" value=\"...\" id=\"sharedScoresheetLink\"/>\n    <button disabled={!beer.isCompleted()} on:click={() => shareScoresheetLink()}>Copy</button>\n    <p class=\"help\">Because the link contains the Scoresheet data it can be very long and may not work everywhere.</p>\n  </div>\n{:else if 4 === currentTab}\n  <div>\n    <p class=\"help\">Generate a text Scoresheet</p>\n    <textarea type=\"text\" value=\"...\" id=\"exportText\"/>\n    <button disabled={!beer.isCompleted()} on:click={() => exportText()}>Export as Text</button>\n  </div>\n{/if}\n",
    "<script>\n  import flavorData from './data/flavor-data.json';\n  import flavorLayout from './data/flavor-layout.json';\n  import SunburstPicker from './comp/SunburstPicker.svelte';\n  import Level from './comp/Level.svelte';\n  import AromaProperties from './comp/AromaProperties.svelte';\n  import {onMount} from 'svelte';\n  import SvgIcon from \"./comp/SvgIcon.svelte\";\n  import SelectCheck from \"./comp/SelectCheck.svelte\";\n  import {BALANCE_OPTIONS, BITTERNESS_OPTIONS, DRYNESS_OPTIONS} from './js/Flavor';\n  import {\n    hopsIcon,\n    maltIcon,\n    fermentationIcon,\n    moreIcon,\n    trashIcon,\n    addIcon,\n    alertIcon,\n    aftertasteIcon,\n    checkmarkIcon,\n    warmsIcon\n  } from './js/AppIcons'\n  import Score from \"./comp/Score.svelte\";\n\n  export let flavor;\n\n  let currentFlavor = '';\n  let inappropriate = false;\n  let aftertaste = false;\n  let warms = false;\n  let level = 3;\n  let selecting = true;\n  let editEntry = -1;\n\n  let mounted = false;\n\n  onMount(async () => {\n    document.getElementById('picker').hidden = true;\n    document.getElementById('list').hidden = false;\n    mounted = true;\n  });\n\n  function picker() {\n    currentFlavor = '';\n    document.getElementById('picker').hidden = false;\n    document.getElementById('list').hidden = true;\n  }\n\n  function edit(index) {\n    currentFlavor = 'Aroma/' + flavor.flavors[index].category + \"/\" + flavor.flavors[index].trait;\n    inappropriate = flavor.flavors[index].inappropriate;\n    aftertaste = flavor.flavors[index].aftertaste;\n    warms = flavor.flavors[index].warms;\n    level = flavor.flavors[index].level;\n    editEntry = index;\n    document.getElementById('picker').hidden = false;\n    document.getElementById('list').hidden = true;\n  }\n\n  function add() {\n    document.getElementById('picker').hidden = true;\n    document.getElementById('list').hidden = false;\n    var boom = currentFlavor.split('/');\n    var category = boom[1].toLocaleLowerCase();\n    var aroma = boom[2];\n    for (var i = 3; i < boom.length; i++) {\n      aroma += \"/\";\n      aroma += boom[i];\n    }\n    if (editEntry >= 0) {\n      flavor.flavors[editEntry] = {\n        level: level,\n        category: category,\n        trait: aroma,\n        inappropriate: inappropriate,\n        aftertaste: aftertaste,\n        warms: warms\n      };\n      editEntry = -1;\n    } else {\n      flavor.flavors.push({\n        level: level,\n        category: category,\n        trait: aroma,\n        inappropriate: inappropriate,\n        aftertaste: aftertaste,\n        warms: warms\n      });\n      flavor = flavor;\n    }\n    // aromas = aromas;\n    inappropriate = false;\n    aftertaste = false;\n    warms = false;\n    flavor.updateHandler(true);\n  }\n\n  function clear(index) {\n    flavor.flavors.splice(index, 1);\n    flavor = flavor;\n    flavor.updateHandler();\n  }\n\n  function updateHandler() {\n    flavor.updateHandler()\n  }\n\n  $: selecting = currentFlavor.length > 0;\n\n</script>\n<style>\n  .buttons, .item {\n    clear: both;\n  }\n</style>\n<div id=\"picker\">\n  <SunburstPicker bind:value={currentFlavor} data={flavorData} layout={flavorLayout} plotId=\"flavorPicker\"/>\n  {#if selecting}\n    <div class=\"inputRow\">\n      <label>\n        <input type=\"checkbox\" bind:checked={inappropriate}/>\n        <SvgIcon d={alertIcon} fill=\"orange\"/>\n        Inappropriate\n      </label>\n    </div>\n\n    <div class=\"inputRow\">\n      <label>\n        <input type=\"checkbox\" bind:checked={warms}/>\n        <SvgIcon d={warmsIcon}/>\n        When the beer warms\n      </label>\n    </div>\n\n    <div class=\"inputRow\">\n      <label>\n        <input type=\"checkbox\" bind:checked={aftertaste}/>\n        <SvgIcon d={aftertasteIcon} fill=\"orange\"/>\n        Aftertaste\n      </label>\n    </div>\n\n    <div>\n      Intensity:\n      <Level edit=true bind:value={level}/>\n    </div>\n\n    <button class=\"validation\" on:click={() => add()}>\n      <SvgIcon d={checkmarkIcon} fill=\"green\" size=\"2em\"/>\n    </button>\n  {/if}\n</div>\n\n<div id=\"list\">\n  {#each flavor.flavors as item, i}\n    <div class=\"item\">\n      <button class=\"delete\" on:click={() => clear(i)}><span title=\"Delete\"><SvgIcon d={trashIcon} size=\"0.8em\"/></span>\n      </button>\n      {#if item.category === 'hops'}\n        <span title=\"Hops\"><SvgIcon d={hopsIcon} size=\"1em\" boxSize=510 fill=\"darkolivegreen\"/></span>\n      {:else if item.category === 'malt'}\n        <span title=\"Malt\"><SvgIcon d={maltIcon} size=\"1em\" boxSize=225 fill=\"orange\"/></span>\n      {:else if item.category === 'fermentation'}\n        <span title=\"Fermentation\"><SvgIcon d={fermentationIcon} size=\"1em\" boxSize=225 fill=\"chocolate\"/></span>\n      {:else if item.category === 'flaws'}\n        <span title=\"Flaws\"><SvgIcon d={alertIcon} size=\"1em\" fill=\"OrangeRed\"/></span>\n      {:else}\n        <span title=\"Others\"><SvgIcon d={moreIcon} size=\"1em\" boxSize=32 fill=\"LightBlue\"/></span>\n      {/if}\n      <Level value={item.level}/>\n      <span on:click={() => edit(i)}>{item.trait}</span>\n      <AromaProperties inappropriate={item.inappropriate} aftertaste={item.aftertaste} warms={item.warms}/>\n    </div>\n  {/each}\n\n  <div class=\"buttons\">\n    <button class=\"validation\" on:click={picker}>\n      <span class=\"buttonText\" title=\"Add new Flavor\"><SvgIcon d={addIcon} size=\"2em\" fill=\"blue\"/><br>Add flavor</span>\n    </button>\n  </div>\n\n  <div class=\"break\">\n    <SelectCheck on:change={updateHandler} bind:value={flavor.bitterness} options={BITTERNESS_OPTIONS}\n                 bind:checked={flavor.bitternessInappropriate}>\n      Bitterness\n    </SelectCheck>\n  </div>\n\n  <div>\n    <SelectCheck on:change={updateHandler} bind:value={flavor.balance} options={BALANCE_OPTIONS}\n                 bind:checked={flavor.balanceInappropriate}>\n      Balance\n    </SelectCheck>\n  </div>\n\n  <div>\n    <SelectCheck on:change={updateHandler} bind:value={flavor.finish} options={DRYNESS_OPTIONS}\n                 bind:checked={flavor.finishInappropriate}>\n      Finish\n    </SelectCheck>\n  </div>\n\n  <div>\n    <span class=\"longLabel\" title=\"Pleasure; Expected/surprising for style, comparing to aromas; Works together?; Backbone\">Additional Comment</span>\n    <textarea on:change={updateHandler} type=text bind:value={flavor.comment}/>\n  </div>\n\n  <div>\n    <Score on:change={updateHandler} bind:value={flavor.score} max=\"20\" min=\"5\">Score</Score>\n  </div>\n</div>\n",
    "<script>\n  import SelectCheck from \"./comp/SelectCheck.svelte\";\n  import {\n    ACCURACY_OPTIONS,\n    INTANGIBLE_OPTIONS,\n    TECHNICAL_OPTIONS,\n    DRINKABILITY_OPTIONS\n  } from './js/Overall';\n  import Score from \"./comp/Score.svelte\";\n  import {getScore, getScoreLongDescription} from './js/PdfRenderer';\n\n  export let overall;\n  export let score;\n  export let aroma;\n  export let flavor;\n\n  const faults = overall.getFaults(aroma, flavor);\n\n  function updateHandler() {\n    overall.updateHandler()\n  }\n</script>\n\n<style>\n  div.scoreDescription {\n    font-size: 0.8em;\n    font-style: italic;\n  }\n\n  div.score {\n    margin-top: 1em;\n    margin-bottom: 1em;\n  }\n\n  dd {\n    text-align: justify;\n    text-justify: inter-word;\n    font-size: 0.8em;\n    color: #444;\n  }\n</style>\n\n<div>\n  <SelectCheck on:change={updateHandler} bind:value={overall.accuracy} options={ACCURACY_OPTIONS}\n               noCheck=\"true\">\n    Accuracy\n  </SelectCheck>\n</div>\n<div>\n  <SelectCheck on:change={updateHandler} bind:value={overall.technical} options={TECHNICAL_OPTIONS}\n               noCheck=\"true\">\n    Technical Merit\n  </SelectCheck>\n</div>\n<div>\n  <SelectCheck on:change={updateHandler} bind:value={overall.drinkability} options={DRINKABILITY_OPTIONS}\n               noCheck=\"true\">\n    Drinkability\n  </SelectCheck>\n</div>\n<div>\n  <SelectCheck on:change={updateHandler} bind:value={overall.intangible} options={INTANGIBLE_OPTIONS}\n               noCheck=\"true\">\n    Intangible\n  </SelectCheck>\n</div>\n<div>\n</div>\n<div>\n  <span class=\"longLabel\" title=\"Stay HUMBLE; Praise; Complexity and layers; Correct: increase, eliminate, decrease, improve; Thanks\">Feedback</span>\n  <textarea on:change={updateHandler} type=text bind:value={overall.feedback}/>\n</div>\n<div>\n  <Score on:change={updateHandler} bind:value={overall.score} max=\"10\" min=\"1\">Score</Score>\n</div>\n{#if score > 0}\n  <div class=\"score\">\n    Total score is <b>{score}</b> which is <b>{getScore(score)}</b>\n    <div class=\"scoreDescription\">{getScoreLongDescription(score)}</div>\n  </div>\n{/if}\n{#if faults.length > 0}\n  <div>\n    <span class=\"longLabel\">Faults and possible solutions</span>\n    <dl>\n      {#each  faults as item}\n        <dt>{item.name}: {item.characteristic}</dt>\n        <dd>{item.solution}</dd>\n      {/each}\n    </dl>\n  </div>\n{/if}\n\n\n",
    "<script>\n  import SelectCheck from \"./comp/SelectCheck.svelte\";\n  import {RANK_OPTIONS} from './js/User';\n  import SvgIcon from \"./comp/SvgIcon.svelte\";\n  import {userIcon} from \"./js/AppIcons\";\n\n  export let user;\n\n  function updateHandler() {\n    user.updateHandler()\n  }\n</script>\n<style>\n    textarea {\n        width: 100%;\n        height: 75px;\n    }\n</style>\n\n{#if !user.name}\n  <h2>Welcome to <a href=\"https://github.com/bdelbosc/beer-feedback#-beer-feedback\" rel=\"noopener\" target=\"_blank\">Beer\n    Feedback</a>!</h2>\n{/if}\n\n<h3>\n  <SvgIcon d={userIcon} fill=\"blue\" boxSize=\"20\"/>\n  Who are you?\n</h3>\n<div>\n  <span class=\"label required\">Name</span>\n  <input type=\"text\" class=\"fixedInput\" on:change={updateHandler} bind:value={user.name}/>\n</div>\n\n<div>\n  <SelectCheck on:change={updateHandler} bind:value={user.rank} options={RANK_OPTIONS} noCheck=\"true\" required=\"true\">\n    Rank\n  </SelectCheck>\n</div>\n\n<div>\n  <span class=\"longLabel\" title=\"BJCP ID, email, ...\">Additional Information</span>\n  <textarea on:change={updateHandler} type=text bind:value={user.comment}/>\n</div>\n",
    "<script>\n  import {fade} from 'svelte/transition';\n  import bjcpGuideline from '../data/bjcp-guideline.json';\n  export let value = false;\n  export let category;\n  export let section;\n\n  $: value = value;\n</script>\n<style>\n    label.guidelineLabel {\n        color: #999;\n        padding-top: 2em;\n        clear: both;\n    }\n\n    p.guidelineText {\n        text-align: justify;\n        text-justify: inter-word;\n    }\n\n    p.disclamer {\n        text-align: justify;\n        text-justify: inter-word;\n        font-size: 0.8em;\n        color: #444;\n    }\n</style>\n{#if category}\n  <div>\n    <label class=\"guidelineLabel\">\n      <input type=\"checkbox\" bind:checked={value}>\n      View BJCP Guideline\n    </label>\n    {#if value}\n      <p class=\"guidelineText\" in:fade>\n        {category}: {bjcpGuideline[category][section]}\n      </p>\n      <p>\n        <a href=\"https://www.bjcp.org/style/2015/{bjcpGuideline[category].link}/\" rel=\"noopener\"\n           target=\"_blank\">View original BJCP {category} description</a>.\n      </p>\n      <p in:fade class=\"disclamer\">\n        This is an extract of the 2021 BJCP Style Guide used for personal educational purpose.\n        The BJCP data or any derivative output are protected by the BJCP Copyright and should not\n        be marketed for profit or integrated or embedded in websites without the BJCP agreement.\n        The most current version of the BCJP Style Guide can be found on the\n        <a href=\"https://www.bjcp.org/\" rel=\"noopener\" target=\"_blank\">BJCP web site</a>.\n      </p>\n    {/if}\n\n  </div>\n{/if}\n\n\n",
    "<script>\n  import SvgIcon from './SvgIcon.svelte'\n  import {lowIcon, mediumHighIcon, mediumIcon, mediumLowIcon, highIcon, noneIcon} from '../js/AppIcons'\n  import {LEVELS} from '../js/BaseCategory'\n\n  const icons = [noneIcon, lowIcon, mediumLowIcon, mediumIcon, mediumHighIcon, highIcon];\n  export let value = 3;\n  export let edit = false;\n  $: level = LEVELS[value];\n</script>\n<style>\n  input[type=range] {\n    width: 100%;\n  }\n</style>\n\n{#if edit}\n  <span><SvgIcon d={icons[value]}/>{LEVELS[value]}</span><br>\n  <input type=\"range\" min=\"0\" max=\"5\" step=\"1\" bind:value={value}>\n{:else if value == 1}\n  <span title=\"{LEVELS[value]}\"><SvgIcon d={lowIcon}/></span>\n{:else if value == 2}\n  <span title=\"{LEVELS[value]}\"><SvgIcon d={mediumLowIcon}/></span>\n{:else if value == 3}\n  <span title=\"{LEVELS[value]}\"><SvgIcon d={mediumIcon}/></span>\n{:else if value == 4}\n  <span title=\"{LEVELS[value]}\"><SvgIcon d={mediumHighIcon}/></span>\n{:else if value == 5}\n  <span title=\"{LEVELS[value]}\"><SvgIcon d={highIcon}/></span>\n{:else if value == 0}\n  <span title=\"{LEVELS[value]}\"><SvgIcon d={noneIcon}/></span>\n{:else}\n  <span title=\"Unknown\">{value}</span>\n{/if}\n",
    "<style>\n /* ----------------------------------------\n ** octocat link\n **/\n  .github-corner:hover .octo-arm {\n    animation: octocat-wave 560ms ease-in-out\n  }\n\n  @keyframes octocat-wave {\n    0%, 100% {\n      transform: rotate(0)\n    }\n    20%, 60% {\n      transform: rotate(-25deg)\n    }\n    40%, 80% {\n      transform: rotate(10deg)\n    }\n  }\n\n  @media (max-width: 639px) {\n    .github-corner:hover .octo-arm {\n      animation: none\n    }\n\n    .github-corner .octo-arm {\n      animation: octocat-wave 560ms ease-in-out\n    }\n  }\n</style>\n<a href=\"https://github.com/bdelbosc/beer-feedback\" target=\"_blank\" rel=\"noopener\" class=\"github-corner\"\n   aria-label=\"Star me on GitHub\">\n  <svg width=\"40\" height=\"40\" viewBox=\"0 0 250 250\"\n       style=\"fill:#70B7FD; color:#fff; position: absolute; bottom: 0; border: 0; left: 0;\" aria-hidden=\"true\">\n    <path d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\"></path>\n    <path\n      d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\"\n      fill=\"currentColor\" style=\"transform-origin: 130px 106px;\" class=\"octo-arm\"></path>\n    <path\n      d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\"\n      fill=\"currentColor\" class=\"octo-body\"></path>\n  </svg>\n</a>\n",
    "<script>\n  import {createEventDispatcher} from 'svelte';\n\n  export let value = undefined;\n  export let max = 12;\n  export let min = 0;\n\n  const dispatch = createEventDispatcher();\n\n  function eventHandler() {\n    // propagate change event\n    dispatch('change');\n  }\n\n</script>\n<style>\n  input[type=number] {\n    width: 4em;\n  }\n\n  input[type=range] {\n    width: 100%;\n  }\n</style>\n<label>\n  <span class=\"label\"><slot/></span>\n  <span>{value > 0 ? value: '...'}</span><span>/{max}</span>\n  <br/>\n  <input on:change={eventHandler} type=range bind:value={value} min={min} max={max}>\n</label>\n",
    "<script>\n  import {onMount} from 'svelte';\n  import {getColor} from '../js/Appearance';\n\n  export let value = undefined;\n\n  const SRM_RGB_MAP = {\n    1: '#FFE699',\n    2: '#FFD878',\n    3: '#FFCA5A',\n    4: '#FFBF42',\n    5: '#FBB123',\n    6: '#F8A600',\n    7: '#F39C00',\n    8: '#EA8F00',\n    9: '#E58500',\n    10: '#DE7C00',\n    11: '#D77200',\n    12: '#CF6900',\n    13: '#CB6200',\n    14: '#C35900',\n    15: '#BB5100',\n    16: '#B54C00',\n    17: '#B04500',\n    18: '#A63E00',\n    19: '#A13700',\n    20: '#9B3200',\n    21: '#952D00',\n    22: '#8E2900',\n    23: '#882300',\n    24: '#821E00',\n    25: '#7B1A00',\n    26: '#771900',\n    27: '#701400',\n    28: '#6A0E00',\n    29: '#660D00',\n    30: '#5E0B00',\n    31: '#5A0A02',\n    32: '#600903',\n    33: '#520907',\n    34: '#4C0505',\n    35: '#470606',\n    36: '#440607',\n    37: '#3F0708',\n    38: '#3B0607',\n    39: '#3A070B',\n    40: '#36080A'\n  };\n\n  function getFontColor(color) {\n    if (color > 18 && color < 30) {\n      return '#DE7C00';\n    } else if (color >= 13 && color <= 18) {\n      return '#600903';\n    }\n    return SRM_RGB_MAP[41 - color];\n  }\n\n  function getWidth() {\n    if (screen.width >= 640) {\n      return \"250px\";\n    }\n    return \"170px\";\n  }\n\n  function selectSrm(color) {\n    value = color;\n    document.getElementById('picker').hidden = true;\n    document.getElementById('selection').hidden = false;\n  }\n\n  function pickSrm() {\n    document.getElementById('picker').hidden = false;\n    document.getElementById('selection').hidden = true;\n  }\n\n  onMount(async () => {\n    document.getElementById('picker').hidden = true;\n    document.getElementById('selection').hidden = false;\n  });\n\n</script>\n<style>\n  span.small {\n    font-size: 0.8em;\n  }\n</style>\n<div id=\"picker\">\n  {#each Object.keys(SRM_RGB_MAP) as color}\n    <button style=\"height: 3em; width: 3em; color: {getFontColor(color)}; background-color: {SRM_RGB_MAP[color]}\"\n            on:click={() => selectSrm(color)}>{color}</button>\n  {/each}\n</div>\n<button id=\"selection\" style=\"width: {getWidth()}; color: {getFontColor(value)}; background-color: {SRM_RGB_MAP[value]}\"\n        on:click={() => pickSrm()}>\n  {#if value >=0}\n    {getColor(value)} <span class=\"small\">{value} SRM</span>\n  {:else}\n    ...\n  {/if}\n</button>\n",
    "<script>\n  import {onMount} from 'svelte';\n  import SvgIcon from \"./SvgIcon.svelte\";\n  import {checkmarkIcon, editIcon} from '../js/AppIcons'\n\n  export let value = '';\n  let selected = '';\n  let mounted = false;\n  export let plotId = 'plotDiv';\n  export let data = [];\n  export let layout = {};\n\n  onMount(async () => {\n    mounted = true;\n  });\n\n  function plotlyLoaded() {\n    console.debug(\"plotly loaded\");\n    let plotDiv = document.getElementById(plotId);\n    if (screen.width >= 640) {\n      layout[\"width\"] = 640;\n      layout[\"height\"] = 700;\n    }\n    Plotly.newPlot(plotDiv, data, layout, {displayModeBar: false});\n    plotDiv.on('plotly_sunburstclick', function (data) {\n      selected = data[\"points\"][0][\"currentPath\"] + data[\"points\"][0][\"label\"];\n    });\n  }\n\n  function validate() {\n    console.debug(\"validate\");\n    value = selected;\n  }\n\n  function edit() {\n    console.debug(\"edit\");\n    selected = value;\n    value = '';\n  }\n\n  $: {\n    if (mounted) {\n      if (value.length == 0) {\n        document.getElementById(plotId + \"Selected\").hidden = true;\n        document.getElementById(plotId + \"Edit\").hidden = false;\n        // TODO here we want to reset the plot or select the root element\n        let plotDiv = document.getElementById(plotId);\n        if (plotDiv.data !== undefined) {\n          console.debug(\"REDRAW\");\n          data[0].level = '';\n          Plotly.redraw(plotDiv, data, layout, {displayModeBar: false});\n        }\n      } else {\n        document.getElementById(plotId + \"Selected\").hidden = false;\n        document.getElementById(plotId + \"Edit\").hidden = true;\n      }\n    }\n  }\n\n</script>\n<style>\n  input {\n    width: 400px;\n  }\n  button[disabled] {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n  @media only screen and (max-width: 639px) {\n      input {\n          width: 270px;\n      }\n  }\n</style>\n<div id=\"{plotId}Edit\" on:load={plotlyLoaded()}>\n  <div>\n    <input bind:value=\"{selected}\"/>\n    <button on:click={validate} disabled={selected.length == 0}>\n      <SvgIcon d={checkmarkIcon} fill=\"green\" />\n    </button>\n  </div>\n  <div id=\"{plotId}\"><!-- Plotly chart will be drawn inside this DIV --></div>\n  <slot/>\n</div>\n<div id=\"{plotId}Selected\">\n  <span contenteditable=\"false\" bind:innerHTML={value}/>\n  <button on:click={edit}>\n    <SvgIcon d={editIcon}/>\n  </button>\n</div>\n\n",
    "<script>\n  export let fill = \"#4A5568\"\n  export let d = \"\"\n  export let size = \"1em\"\n  export let boxSize = 24\n</script>\n\n<svg class=\"icon\" width={size} height={size} viewBox=\"0 0 {boxSize} {boxSize}\" fill={fill}\n     preserveAspectRatio=\"xMidYMid\" xmlns=\"http://www.w3.org/2000/svg\">\n  <path d={d} stroke=\"#4A5568\" stroke-width=\"1\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n</svg>\n\n\n<style>\n  .icon {\n    position: relative;\n    display: inline-block;\n  }\n</style>\n",
    "<script>\n  import {onMount} from \"svelte\";\n\n  export let items = [];\n  export let activeTabValue;\n  let isMobile = screen.width < 640;\n\n  onMount(() => {\n    // Set default tab value\n    if (Array.isArray(items) && items.length && items[0].value) {\n      activeTabValue = items[0].value;\n    }\n  });\n\n  const handleClick = tabValue => () => (activeTabValue = tabValue);\n\n  let comment;\n\n  $: comment = items[activeTabValue - 1].comment;\n</script>\n\n<style>\n  ul {\n    display: flex;\n    flex-wrap: wrap;\n    padding-left: 0;\n    margin-bottom: 2px;\n    margin-top: 2px;\n    list-style: none;\n    border-bottom: 1px solid #eee;\n    border-top-left-radius: 0.4rem;\n    border-top-right-radius: 0.4rem;\n    clear: both;\n  }\n\n  span {\n    border: 1px solid transparent;\n    border-top-left-radius: 0.25rem;\n    border-top-right-radius: 0.25rem;\n    display: block;\n    padding: 0.5rem 1rem;\n    cursor: pointer;\n  }\n\n  span:hover {\n    border-color: #e9ecef #e9ecef #dee2e6;\n  }\n\n  li.active > span {\n    color: orangered;\n    background-color: #fff;\n    border-color: #ffffff #ffffff orangered #ffffff;\n    border-width: 0 0 2px;\n    font-size: 1.1em;\n  }\n\n  li.activeCompleted > span {\n    color: darkgreen;\n    background-color: #fff;\n    border-color: #ffffff #ffffff darkgreen #ffffff;\n    border-width: 0 0 2px;\n    font-size: 1.1em;\n  }\n\n  li.inactive > span {\n    color: orangered;\n    opacity: 0.4;\n    background-color: #fff;\n    border-color: #ffffff #ffffff #ddd;\n    border-width: 0 0 2px;\n    font-size: 1.1em;\n  }\n\n  li.inactive > span:hover {\n      background-color: #eee;\n  }\n\n  li.inactiveCompleted > span {\n    color: darkgreen;\n    opacity: 0.4;\n    background-color: #fff;\n    border-color: #ffffff #ffffff #eeeeee;\n      border-width: 0 0 2px;\n    font-size: 1.1em;\n  }\n\n  li.inactiveCompleted > span:hover {\n      background-color: #eee;\n  }\n\n  .comment {\n    font-size: 0.8em;\n    clear: both;\n    font-style: italic;\n    color: orangered;\n    padding-top: 4px;\n    padding-bottom: 4px;\n  }\n\n</style>\n\n<ul>\n  {#if Array.isArray(items)}\n    {#each items as item}\n      {#if activeTabValue === item.value}\n        <li class={item.comment ? 'active':'activeCompleted'}>\n          <span on:click={handleClick(item.value)}>{item.label}</span>\n        </li>\n      {:else}\n        <li class={item.comment ? 'inactive': 'inactiveCompleted'}>\n          <span on:click={handleClick(item.value)}>{isMobile ? item.shortLabel : item.label}</span>\n        </li>\n      {/if}\n    {/each}\n  {/if}\n</ul>\n<div class=\"comment\">{comment}</div>\n\n"
  ],
  "names": [],
  "mappings": "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"
}